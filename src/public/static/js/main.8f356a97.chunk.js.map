{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/save-data-user.js","helpers/prepare-event.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","actions/ui.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","baseUrl","process","fetchNoToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","saveDataUser","dispatch","ok","setItem","Date","getTime","login","uid","msg","Swal","fire","error","errors","prepareEvent","events","map","event","start","moment","toDate","end","eventClearActiveEvent","type","eventAddNew","payload","eventUpdated","eventDeleted","eventLoaded","checkingFinish","user","startLogout","clear","logout","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","placeholder","onChange","Navbar","useSelector","state","auth","onClick","uiOpenModal","AddNewFab","DeleteEventFab","getState","id","calendar","activeEvent","console","log","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","registerLocale","es","now","minutes","seconds","add","clone","initEvent","notes","CalendarModal","ui","modalOpen","startDate","endDateModal","endDate","dateStart","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","_id","eventStartAddNew","locale","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","minDate","autoComplete","rows","localizer","momentLocalizer","CalendarScreen","lasView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f356a97.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    // Funcion para limpiar el formulario\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","/* Url base */\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\n/* Fetch cuando no requerimos el TOKEN */\r\nexport const fetchNoToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') return fetch(url);\r\n    else return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/* Fetch cuando requerimos el TOKEN */\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'x-token': token\r\n        }\r\n    });\r\n    else return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiOpenModalWithSlotCalendar: '[ui] Open Modal With Slot Calendar',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Clear Events Logout',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddNew: '[event] Add New',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish Checking Login State',\r\n    authLogin: '[auth] Login',\r\n    authLogout: '[auth] Logout'\r\n}","import Swal from 'sweetalert2';\r\n\r\n/* Importaciones propias */\r\nimport {login} from '../actions/auth';\r\n\r\nexport const saveDataUser = (data, dispatch) => {\r\n    if (data.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n        /* Acción al login */\r\n        dispatch(login({\r\n            uid: data.uid,\r\n            name: data.name\r\n        }));\r\n    } else {\r\n        if (data.msg) Swal.fire('Error', data.msg, 'error');\r\n        else {\r\n            for (const error in data.errors) {\r\n                // console.log(data.errors[error].msg)\r\n                Swal.fire('Error', data.errors[error].msg, 'error');\r\n            }\r\n        }\r\n    }\r\n}","import moment from 'moment';\r\n\r\n/* Función para convertir el string date a objetos tipo Date */\r\nexport const prepareEvent = (events) => {\r\n    return events.map(event => ({\r\n        ...event,\r\n        start: moment(event.start).toDate(),\r\n        end: moment(event.end).toDate()\r\n    }))\r\n}","import Swal from 'sweetalert2';\r\n\r\n/* Importaciones propias */\r\nimport {types} from '../types/types';\r\nimport {fetchWithToken} from '../helpers/fetch';\r\nimport {prepareEvent} from '../helpers/prepare-event';\r\n\r\n/* Activar la nota del state calendar.events */\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n/* Limpiar evento activo */\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\n/* Iniciar el proceso de agregar un nuevo evento */\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        // console.log(event);\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const data = await resp.json();\r\n            // console.log(data);\r\n            if (data.ok) {\r\n                event.id = data.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n/* Agregar nueva nota al state de calendar.events */\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n/* Inicia la actualización del evento a la DB */\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            // console.log(event);\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const data = await resp.json();\r\n            // console.log(data);\r\n            if (data.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                if (data.msg) Swal.fire('Error', data.msg, 'error');\r\n                else {\r\n                    for (const error in data.errors) {\r\n                        // console.log(data.errors[error].msg)\r\n                        Swal.fire('Error', data.errors[error].msg, 'error');\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n/* Actualizar evento */\r\nexport const eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n/* Inicio para la eliminación de un evento en la DB */\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        // console.log(id);\r\n        try {\r\n            // console.log(event);\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const data = await resp.json();\r\n            // console.log(data);\r\n            if (data.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                if (data.msg) Swal.fire('Error', data.msg, 'error');\r\n                else {\r\n                    for (const error in data.errors) {\r\n                        // console.log(data.errors[error].msg)\r\n                        Swal.fire('Error', data.errors[error].msg, 'error');\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n/* Eliminar Evento */\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\n/* Obtener todos los eventos de la base de datos */\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const data = await resp.json();\r\n            // console.log(data);\r\n\r\n            const events = prepareEvent(data.events);\r\n            // console.log(events)\r\n            dispatch(eventLoaded(events));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n/* Editar el store de los eventos */\r\nexport const eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n/* Limpiar eventos al hacer logout */\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});\r\n","/* Importaciones propias */\r\nimport {fetchNoToken, fetchWithToken} from '../helpers/fetch';\r\nimport {types} from '../types/types';\r\nimport {saveDataUser} from '../helpers/save-data-user';\r\nimport {eventLogout} from './events';\r\n\r\n/* acción para el inicio del login  */\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchNoToken('auth', {email, password}, 'POST');\r\n        const data = await resp.json();\r\n        // console.log(data);\r\n\r\n        await saveDataUser(data, dispatch);\r\n    }\r\n}\r\n\r\n/* Acción para el inicio del Registro */\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchNoToken('auth/register', {email, password, name}, 'POST');\r\n        const data = await resp.json();\r\n        // console.log(data);\r\n\r\n        await saveDataUser(data, dispatch);\r\n    }\r\n}\r\n\r\n/* Acción para validar el TOKEN */\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew-token');\r\n        const data = await resp.json();\r\n        // console.log(data);\r\n\r\n        if (data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            /* Acción al login */\r\n            dispatch(login({\r\n                uid: data.uid,\r\n                name: data.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n/* Acción para finalizar la carga si el usuario esta logueado */\r\nexport const checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\n/* Acción para editar el store con el usuario logueado */\r\nexport const login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n/* Inicio del Logout - limpiar el localStorage */\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n\r\n        /* Limpiar store de calendar */\r\n        dispatch(eventLogout());\r\n\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\n/* Logout del usuario */\r\nexport const logout = () => ({\r\n    type: types.authLogout\r\n})","import {useDispatch} from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\n/* Estilos del Auth */\r\nimport './login.css';\r\n\r\n/* Importaciones propias */\r\nimport {useForm} from '../../hooks/useForm';\r\nimport {startLogin, startRegister} from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    /* useForm para el formulario del login */\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        loginEmail: '',\r\n        loginPassword: ''\r\n    });\r\n    const {loginEmail, loginPassword} = formLoginValues;\r\n\r\n    /* Función para el submit del login */\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        /* Dispara a la acción startLogin */\r\n        dispatch(startLogin(loginEmail, loginPassword));\r\n    }\r\n\r\n    /* useForm para el formulario del registro */\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        registerName: '',\r\n        registerEmail: '',\r\n        registerPassword1: '',\r\n        registerPassword2: ''\r\n    });\r\n    const {registerName, registerEmail, registerPassword1, registerPassword2} = formRegisterValues;\r\n\r\n    /* Función para el submit del register */\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (registerPassword1 !== registerPassword2) return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n\r\n        dispatch(startRegister(registerEmail, registerPassword2, registerName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"loginEmail\"\r\n                                value={loginEmail}\r\n                                onChange={handleLoginInputChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={loginPassword}\r\n                                onChange={handleLoginInputChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"registerPassword1\"\r\n                                value={registerPassword1}\r\n                                onChange={handleRegisterInputChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterInputChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from 'react-redux';\r\n\r\n/* Importaciones propias */\r\nimport {startLogout} from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    /* Store del auth */\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    /* Logout del usuario */\r\n    /* Se realiza el logout porque en el AppRouter esta pendiente del checking y uid vuelve a cargar el componente */\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\"\r\n                    onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"/>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import {types} from '../types/types';\r\n\r\n/* Abrir modal */\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\n/* Abrir modal con las fechas cargadas */\r\nexport const uiOpenModalWithSlotCalendar = (start, end) => ({\r\n    type: types.uiOpenModalWithSlotCalendar,\r\n    payload: {\r\n        start,\r\n        end\r\n    }\r\n});\r\n\r\n/* Cerrar modal */\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import {useDispatch} from 'react-redux';\r\n\r\n/* Importaciones propias */\r\nimport {uiOpenModal} from '../../actions/ui';\r\nimport {eventClearActiveEvent} from '../../actions/events';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        /* Limpiar evento activo */\r\n        dispatch(eventClearActiveEvent());\r\n\r\n        /* Abrir el modal */\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\"\r\n                onClick={handleClickNew}>\r\n            <i className=\"fas fa-plus\"/>\r\n        </button>\r\n    )\r\n}","import {useDispatch} from 'react-redux';\r\n\r\n/* Importaciones propias */\r\nimport {eventStartDelete} from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    /* dispatch de Redux */\r\n    const dispatch = useDispatch();\r\n\r\n    /* Función para disparar la acción de eliminar el evento del store */\r\n    const handleDelete = () => {\r\n        // dispatch(eventDeleted()); -> antes de integrar con el backend\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\"\r\n                onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"/>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","export const CalendarEvent = ({event}) => {\r\n    // console.log(event);\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DatePicker, {registerLocale} from 'react-datepicker';\r\nimport es from 'date-fns/locale/es';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n/* Importaciones propias */\r\nimport {useForm} from '../../hooks/useForm';\r\nimport {uiCloseModal} from '../../actions/ui';\r\nimport {eventClearActiveEvent, eventStartAddNew, eventStartUpdate} from '../../actions/events';\r\n\r\n/* Estilos del DatePicker */\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n/* Estilos del Modal */\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\n/* Configuración del Modal */\r\nModal.setAppElement('#root');\r\n\r\n/* Configuración del idioma de DatePicker */\r\nregisterLocale('es', es);\r\n\r\n/* Fecha inicial */\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\n/* Fecha final */\r\nconst end = now.clone().add(1, 'hours');\r\n\r\n/* Estado inicial del evento */\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: end.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    /* dispatch de Redux */\r\n    const dispatch = useDispatch();\r\n\r\n    /* Estado del modal */\r\n    const {modalOpen, startDate, endDate: endDateModal} = useSelector(state => state.ui);\r\n    /* Estado del activeEvent */\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    /* Estados de las fechas */\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    // eslint-disable-next-line\r\n    const [dateEnd, setDateEnd] = useState(end.toDate());\r\n\r\n    /* Estado del título del formulario */\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    /* Obtener información del formulario */\r\n    const [formValues, handleInputChange, reset] = useForm(initEvent)\r\n    const {title, notes, start, end: endDate} = formValues;\r\n\r\n    /* Cambiar la información de formValues con la información de activeEvent */\r\n    useEffect(() => {\r\n        // console.log(activeEvent);\r\n        if (activeEvent) reset(activeEvent);\r\n        else reset(initEvent);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [activeEvent]);\r\n\r\n    /* Cerrar Modal */\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n\r\n        /* Limpiar evento activo */\r\n        dispatch(eventClearActiveEvent());\r\n\r\n        /* Limpiar formValues */\r\n        reset(initEvent);\r\n    }\r\n\r\n    /* Inicio de fecha */\r\n    const handleStartDateChange = (e) => {\r\n        // console.log(e);\r\n        setDateStart(e);\r\n\r\n        /* Cambiar el estado si cambia la fecha de inicio */\r\n        reset({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    /* Fin de fecha */\r\n    const handleEndDateChange = (e) => {\r\n        // console.log(e);\r\n        setDateEnd(e);\r\n\r\n        /* Cambiar el estado si cambia la fecha de fin */\r\n        reset({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formValues);\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(endDate);\r\n\r\n        /* Validar las fechas */\r\n        if (momentStart.isSameOrAfter(momentEnd)) return Swal.fire('Error', 'La fecha fin debe de ser mayor o igual a la fecha de inicio', 'error');\r\n\r\n        /* Validar el título */\r\n        if (title.trim().length < 2) return setTitleValid(false);\r\n        else setTitleValid(true);\r\n\r\n        if (activeEvent) {\r\n            /* Actualizar evento */\r\n            // dispatch(eventUpdated(formValues)); -> antes de integrar con el backend\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            /* dispatch(eventStartAddNew({\r\n                 ...formValues,\r\n                 id: new Date().getTime(),\r\n                 start: startDate || formValues.start,\r\n                 end: endDateModal || formValues.end,\r\n                 user: {\r\n                     _id: '123',\r\n                     name: 'Angoma'\r\n                 }\r\n             }));  -> antes de integrar con el backend */\r\n\r\n            /* Grabar un nuevo evento */\r\n            dispatch(eventStartAddNew({\r\n                ...formValues,\r\n                start: startDate || formValues.start,\r\n                end: endDateModal || formValues.end\r\n            }));\r\n        }\r\n\r\n        /* Cerrar el modal */\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-bottom\">\r\n\r\n                <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n                <hr/>\r\n\r\n                <form className=\"container\"\r\n                      onSubmit={handleSubmitForm}>\r\n\r\n                    {\r\n                        (!startDate && !endDateModal) && (\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Fecha de inicio</label>\r\n                                    <DatePicker\r\n                                        locale=\"es\"\r\n                                        selected={start}\r\n                                        onChange={handleStartDateChange}\r\n                                        className=\"form-control\"\r\n                                        showTimeSelect\r\n                                        timeFormat=\"HH:mm\"\r\n                                        timeIntervals={60}\r\n                                        timeCaption=\"time\"\r\n                                        dateFormat=\"MMM d, yyyy h:mm aa\"/>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Fecha de fin</label>\r\n                                    <DatePicker\r\n                                        locale=\"es\"\r\n                                        selected={endDate}\r\n                                        onChange={handleEndDateChange}\r\n                                        className=\"form-control\"\r\n                                        showTimeSelect\r\n                                        timeFormat=\"HH:mm\"\r\n                                        timeIntervals={60}\r\n                                        timeCaption=\"time\"\r\n                                        dateFormat=\"MMM d, yyyy h:mm aa\"\r\n                                        minDate={dateStart}/>\r\n                                </div>\r\n\r\n                                <hr/>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            onChange={handleInputChange}\r\n                            value={title}/>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            onChange={handleInputChange}\r\n                            value={notes}/>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\">\r\n                        <i className=\"far fa-save\"/>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\n/* Importaciones propias */\r\nimport {Navbar} from '../ui/Navbar';\r\nimport {AddNewFab} from '../ui/AddNewFab';\r\nimport {DeleteEventFab} from '../ui/DeleteEventFab';\r\nimport {messages} from '../../helpers/calendar-messages-es';\r\nimport {CalendarEvent} from './CalendarEvent';\r\nimport {CalendarModal} from './CalendarModal';\r\nimport {uiOpenModal, uiOpenModalWithSlotCalendar} from '../../actions/ui';\r\nimport {eventClearActiveEvent, eventSetActive, eventStartLoading} from '../../actions/events';\r\n\r\n/* Importacion del estilo de BigCalendar */\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n/* Configuración del idioma de moment */\r\nmoment.locale('es');\r\n\r\n/* Configuración de react big calendar */\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    /* dispatch de Redux */\r\n    const dispatch = useDispatch();\r\n\r\n    /* Leer eventos del Store */\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    // console.log(events);\r\n    /* Leer usuario del Store */\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    /* Estado de la última vista */\r\n    const [lasView, setLastView] = useState(localStorage.getItem('last-view') || 'month');\r\n\r\n    /* Efecto para obtener todos los eventos al cargar el componente */\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    /* Evento al hacer doble click */\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    /* Evento al seleccionar el evento */\r\n    const onSelectEvent = (e) => {\r\n        // console.log(e);\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    /* Evento para seleccionar la vista */\r\n    const onViewChange = (e) => {\r\n        // console.log(e);\r\n\r\n        /* Actualizar y guardar la última vista en el localStorage */\r\n        setLastView(e);\r\n        localStorage.setItem('last-view', e);\r\n    }\r\n\r\n    /* Evento para seleccionar un slot del calendar */\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e);\r\n\r\n        /* Limpiar actievent */\r\n        if (activeEvent) return dispatch(eventClearActiveEvent());\r\n\r\n        /* Abrir modal con fecha selecionada en el calendar */\r\n        dispatch(uiOpenModalWithSlotCalendar(e.start, e.end));\r\n    }\r\n\r\n    /* Evento para dar estilos a la nota */\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        // console.log(event, start, end, isSelected);\r\n        return {\r\n            style: {\r\n                backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n                borderRadius: '0px',\r\n                opacity: 0.8,\r\n                display: 'block',\r\n                color: 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lasView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}/>\r\n\r\n            <AddNewFab/>\r\n\r\n            {\r\n                (activeEvent) && (\r\n                    <DeleteEventFab/>\r\n                )\r\n            }\r\n\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}","import {Redirect, Route} from \"react-router-dom\";\r\nimport {PropTypes} from 'prop-types';\r\n\r\nexport const PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest}\r\n               component={(props) => (\r\n                   (!isAuthenticated)\r\n                       ? (<Component {...props}/>)\r\n                       : (<Redirect to=\"/\"/>)\r\n               )}/>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import {Redirect, Route} from \"react-router-dom\";\r\nimport {PropTypes} from 'prop-types';\r\n\r\nexport const PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest}\r\n               component={(props) => (\r\n                   (isAuthenticated)\r\n                       ? (<Component {...props}/>)\r\n                       : (<Redirect to=\"/login\"/>)\r\n               )}/>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    // Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n/* Importaciones propias */\r\nimport {LoginScreen} from \"../components/auth/LoginScreen\";\r\nimport {CalendarScreen} from \"../components/calendar/CalendarScreen\";\r\nimport {useEffect} from 'react';\r\nimport {startChecking} from '../actions/auth';\r\nimport {PublicRoute} from './PublicRoute';\r\nimport {PrivateRoute} from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    /* Estado de la autenticación */\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    /* Validar si tengo un usuario logueado */\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <div className=\"m-0 vh-100 row justify-content-center align-items-center\">\r\n                <div className=\"spinner-border text-primary\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    {/*<Route exact path=\"/login\" component={LoginScreen}/>\r\n                    <Route exact path=\"/\" component={CalendarScreen}/>*/}\r\n\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}/>\r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}/>\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","/* Importaciones propias */\r\nimport {types} from '../types/types';\r\n\r\n/* Estado inicial */\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /* Abrir el modal */\r\n        case types.uiOpenModal:\r\n            delete state.startDate;\r\n            delete state.endDate;\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        /* Abrir el modal si se hace click en un slot del calendar */\r\n        case types.uiOpenModalWithSlotCalendar:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n                startDate: action.payload.start,\r\n                endDate: action.payload.end\r\n            }\r\n\r\n        /* Cerrar el modal */\r\n        case types.uiCloseModal:\r\n            delete state.startDate;\r\n            delete state.endDate;\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {types} from '../types/types';\r\n\r\n/*{\r\n    id: idMongoDB,\r\n    title: 'Cumpleaños de Arian',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    notes: 'Comprar pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Angoma'\r\n    }\r\n}*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /* Activar el evento */\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        /* Limpiar evento activo */\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        /* Agregar un nuevo evento al state */\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        /* Actualizar evento */\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => (event.id === action.payload.id) ? action.payload : event\r\n                )\r\n            }\r\n        /* Eliminar evento */\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => (event.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        /* Cargar eventos */\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        /* Limpiar store de calendar hacer logout */\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","/* Importaciones propias */\r\nimport {types} from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /* Guardar usuario en el store */\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        /* Cambiar el store auth en finalizado si el usuario esta loguedo */\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        /* Logout del usuario - limpiar el store */\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\n\r\n/* Importaciones propias */\r\nimport {uiReducer} from './uiReducer';\r\nimport {calendarReducer} from './calendarReducer';\r\nimport {authReducer} from './authReducer';\r\n\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n/* Importaciones propias */\r\nimport {rootReducers} from '../reducers/rootReducers';\r\n\r\n/* Configuración de Redux para las herramientas de desarrollo */\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import {Provider} from 'react-redux';\r\n\r\n/* Importaciones propias */\r\nimport {AppRouter} from './router/AppRouter';\r\nimport {store} from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* Estilos globales */\nimport './styles.css';\n\n/* Importaciones propias */\nimport {CalendarApp} from \"./CalendarApp\";\n\nReactDOM.render(\n    <CalendarApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}